{
  "Qwik component": {
    "scope": "typescriptreact",
    "prefix": "component$",
    "description": "Qwik counter component",
    "body": [
      "export interface ${1:MyCmp}Props {",
      "  step: number;",
      "}",
      "",
      "export const ${1:MyCmp} = component$((props: ${1:MyCmp}Props) => {",
      "  const state = useStore({",
      "    count: 0",
      "  });",
      "  $0",
      "  return (",
      "    <Host>",
      "      <button onClick$={() => state.count += props.step}>",
      "        {state.count}",
      "      </button>",
      "    </Host>",
      "  );",
      "});"
    ]
  },
  "Qwik component (basic)": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "component$basic",
    "description": "Basic Qwik component",
    "body": [
      "export const ${1:MyCmp} = component$(() => {",
      "  return (",
      "    <Host>",
      "      <div>",
      "        ${1:MyCmp}",
      "      </div>",
      "    </Host>",
      "  );",
      "});"
    ]
  },
  "Qwik state": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "useStore$",
    "description": "useStore() declaration",
    "body": ["const ${1:state} = useStore({", "  $2", "});", "$0"]
  },
  "$ hook": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "$",
    "description": "$() function hook",
    "body": ["$(() => {", "  $0", "});", ""]
  },
  "useClientEffect": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "useClientEffect",
    "description": "useClientEffect$() function hook",
    "body": ["useClientEffect$(() => {", "  $0", "});", ""]
  },
  "useWatch": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "useWatch",
    "description": "useWatch$() function hook",
    "body": ["useWatch$((track) => {", "  track($1);", "  $0", "});", ""]
  },
  "useServerMount": {
    "scope": "javascriptreact,typescriptreact",
    "prefix": "useServerMount",
    "description": "useServerMount$() function hook",
    "body": ["useServerMount$(() => {", "  $0", "});", ""]
  }
}
